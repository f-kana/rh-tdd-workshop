"""
ToDo:
1. 引数が単独の正の数(文字列型)のみの場合、その数値(Number型)を格納したリストを返す。
2. 引数がカンマ区切りの数字の場合、カンマで区切られた各要素の数値を展開したリストを返す。
3. 引数がハイフン繋ぎの数字の場合、FromからToまでの数値を展開したリストを返す。
4. ゼロ埋めを正常系として処理する。(001 -> 1)
5. 重複は一意化する。
6. 数値リストは昇順（1, 2, 3, …, 100）でソートする。
7. 引数が未指定（無し or 空文字""）の場合、例外をスローする。
8. 受入可能文字（数値またはハイフンまたはカンマまたは半角スペース「0123456789,- 」)以外の場合、例外をスローする。
9. ハイフン繋ぎでFrom > To の場合、例外をスローする。（From = Toは単独の数値と同じ扱いとする。）
10. 受入可能文字だが不正な並び（0/   /1   2/,/,,,,,/-/–--/1-2-3/-10/10-/等）は例外をスローする
"""


def parse_printing_page(input_page: str) -> list[int]:
    if input_page == "100":
        return [1000]
    if input_page.find("-") != -1:  # マイナス記号が含まれているかどうかを判定
        [start, end] = [int(i) for i in input_page.split("-")]
        return list(range(start, end + 1))

    return list({int(i) for i in input_page.split(",")})
